repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
        name: Ensure newline at end of file
        description: This hook ensures that files end with a newline.
        entry: end-of-file-fixer
        language: python
        types: [text]
        stages: [commit, push, manual]
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: This hook removes trailing whitespace.
        entry: trailing-whitespace-fixer
        language: python
        types: [text]
        stages: [commit, push, manual]
      - id: check-added-large-files
        name: Check for large files
        description: This hook checks for files that are too large to be added to the repository.
        entry: check-added-large-files
        language: python
        stages: [commit, push, manual]
        args: ['--maxkb=500', '--enforce-all']
      - id: check-case-conflict
        name: Check for case conflicts
        description: Checks for files that would conflict in case-insensitive filesystems.
        entry: check-case-conflict
        language: python
      - id: debug-statements
        name: debug statements (python)
        description: checks for debugger imports and py37+ `breakpoint()` calls in python source.
        entry: debug-statement-hook
        language: python
        types: [python]
      - id: mixed-line-ending
        name: mixed line ending
        description: replaces or checks mixed line ending.
        entry: mixed-line-ending
        language: python
        types: [text]
      - id: check-merge-conflict
        name: check for merge conflicts
        description: checks for files that contain merge conflict strings.
        entry: check-merge-conflict
        language: python
        types: [text]
        args: ['--assume-in-merge']
      - id: name-tests-test
        name: python tests naming
        description: verifies that test files are named correctly.
        entry: name-tests-test
        language: python
        args: [--pytest]
      - id: detect-private-key
        name: detect private key
        description: detects the presence of private keys.
        entry: detect-private-key
        language: python
        types: [text]
      - id: check-toml
        name: check toml
        description: checks toml files for parseable syntax.
        entry: check-toml
        language: python
        types: [toml]
      - id: check-yaml
        name: check yaml
        description: checks yaml files for parseable syntax.
        entry: check-yaml
        language: python
        types: [yaml]
      - id: check-json
        name: check json
        description: checks json files for parseable syntax.
        entry: check-json
        language: python
        types: [json]
  - repo: https://github.com/psf/black
    rev: 23.1.0
    hooks:
      - id: black
        args: [--line-length=120]
        exclude: __pycache__|\.pytest_cache
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
    -   id: add-trailing-comma
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=120]
        additional_dependencies:
          [flake8-bugbear, flake8-comprehensions, flake8-pyproject]
        exclude: __pycache__|\.pytest_cache
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        exclude: __pycache__|\.pytest_cache
  - repo: local
    hooks:
      - id: pytest
        name: Run pytest
        entry: bash -c 'PYTHONPYCACHEPREFIX=/dev/null poetry run pytest --disable-warnings --cache-clear'
        language: system
        types: [python]
        exclude: __pycache__|\.pytest_cache
